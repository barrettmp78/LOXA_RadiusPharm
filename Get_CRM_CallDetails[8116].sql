SELECT 
CC.ID as Call_ID,
CC.NAME as Call_Name,
CC.CALL_DATE_VOD__C as Call_Date,
CC.ENTITY_DISPLAY_NAME_VOD__C Account_Name,
CC.ACCOUNT_NETWORK_ID_SOBI__C Account_NetworkID,
CC.ACCOUNT_NPI_SOBI__C Account_NPI,
CC.ACCOUNT_VOD__C Account_CRMID,
CC.TERRITORY_VOD__C as Call_TerrID,
ZT.TERRITORY_NAME AS Call_TerrName,
ZT.REGION_ID AS Call_RegID,
ZT.REGION_NAME AS Call_RegName,
DECODE(CC.IS_PARENT_CALL_VOD__C, '1', 'N','Y') as Is_Parent_Call,
PC.NAME as ParentCaLL ,
CASE WHEN CC.CALL_TYPE_VOD__C LIKE 'Detail%' THEN 'Detail' ELSE CC.CALL_TYPE_VOD__C end  as Call_Type,
CC.SOBI_CALL_TYPE__C as Sobi_Call_Type,
--ACTIVITY_TYPE__C Interaction_Type,
CC.DOVA_MEETING_EXECUTION_CNX__C as Interaction_Type,
CC.DETAILED_PRODUCTS_VOD__C AS Product,
CC.DURATION_VOD__C as Call_Duration,
REPLACE(CC.ATTENDEE_TYPE_VOD__C, '_vod', '')ATTENDEE_TYPE,
coalesce(CC.ATTENDEES_VOD__C, 0)::int as Nbr_of_Attendees,
CASE WHEN CC.OTHER_ATTENDING_NON_PRESCRIBING_MEDICAL__C = '10+' THEN 10 ELSE NVL(CC.OTHER_ATTENDING_NON_PRESCRIBING_MEDICAL__C, 0)::int END as Non_Prescriber_Attendees,
CASE WHEN CC.OTHER_ATTENDING_PHARMACY__C = '10+' THEN 10 ELSE NVL(CC.OTHER_ATTENDING_PHARMACY__C, 0)::int END  as Pharmacy_Attendees,
CASE WHEN CC.OTHER_ATTENDING_STAFF__C = '10+' THEN 10 ELSE NVL(CC.OTHER_ATTENDING_STAFF__C, 0)::int END   as Staff_Attendees,
CASE WHEN CC.OTHER_ATTENDING_STAFF_ADVOCATES__C = '10+' THEN 10 ELSE NVL(CC.OTHER_ATTENDING_STAFF_ADVOCATES__C, 0)::int END as Staff_Advocates_Attendees,
CASE WHEN CC.OTHER_ATTENDING_STAFF_FINANCIAL__C = '10+' THEN 10 ELSE NVL(CC.OTHER_ATTENDING_STAFF_FINANCIAL__C, 0)::int END as Staff_Financial_Attendees,
CC.CLM_VOD__C as CLM,
AC.HEMATOLOGY_CATEGORY__C AS HEM_Category,
AC.VONJO_CATEGORY__C AS Vonjo_Category,
AC.DOPTELET_CATEGORY__C AS Doptelet_Category,
AC.DOVA_IC__C AS IC_Aligned,
REPLACE(R."NAME", '_vod', '') AS Account_TYPE,
U."NAME" AS Created_By,
CC.CREATEDDATE::date as Created_Date,
CC.THIS_HCP_PRESENT__C as HCP_Present,
--CC.LASTACTIVITYDATE as Last_Activity_Date,
u2."NAME"  as Last_Modified_By,
CC.LASTMODIFIEDDATE::date as Last_Modified_Date,
CC.INSERTED_ON::date as Data_Through_date
from SOBI_CDW_PROD.CDW_CURATED_T.CRM_CALL2_VOD_C CC
LEFT JOIN (SELECT DISTINCT TERRITORY_ID, TERRITORY_NAME,REGION_ID, REGION_NAME FROM SOBI_CDW_PROD.ANALYST_DATAMART.HEMA_ZTT) ZT ON ZT.TERRITORY_ID = CC.TERRITORY_VOD__C
LEFT JOIN SOBI_CDW_PROD.CDW_CURATED_T.CRM_ACCOUNT AC ON AC.ID = CC.ACCOUNT_VOD__C
LEFT JOIN SOBI_CDW_PROD.CDW_CURATED_T.CRM_RECORDTYPE R ON R.ID = AC.RECORDTYPEID 
LEFT JOIN SOBI_CDW_PROD.CDW_CURATED_T.CRM_USER U ON u.id = CC.CREATEDBYID 
LEFT JOIN SOBI_CDW_PROD.CDW_CURATED_T.CRM_USER U2 ON u2.id = CC.LASTMODIFIEDBYID  
LEFT JOIN SOBI_CDW_PROD.CDW_CURATED_T.CRM_CALL2_VOD_C PC ON PC.id = CC.PARENT_CALL_VOD__C
where CC.call_date_vod__c >= '2024-01-01' --AND cc.CALL_DATE_VOD__C <= '2024-01-21'
and REPLACE(CC.STATUS_VOD__C, '_vod', '') = 'Submitted'
and CC.RECORDTYPEID in (select id from SOBI_CDW_PROD.CDW_CURATED_T.CRM_RECORDTYPE where "NAME" ilike 'Call Report%' and sobjecttype = 'Call2_vod__c') 
and CC.TERRITORY_VOD__C ILIKE 'USSH%'
ORDER BY call_date DESC, call_name

--SELECT DISTINCT TERRITORY_ID, TERRITORY_NAME, REGION_ID, REGION_NAME  FROM SOBI_CDW_PROD.ANALYST_DATAMART.HEMA_ZTT